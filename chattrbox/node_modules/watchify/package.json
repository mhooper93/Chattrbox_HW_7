{
  "_args": [
    [
      {
        "raw": "watchify",
        "scope": null,
        "escapedName": "watchify",
        "name": "watchify",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/maybaby/Documents/SPRING_2018_CLASSES/CS_473_FrontEnd/front-end-dev-resources/chattrbox"
    ]
  ],
  "_from": "watchify@latest",
  "_id": "watchify@3.11.0",
  "_inCache": true,
  "_location": "/watchify",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/watchify_3.11.0_1520126176966_0.16077965742184674"
  },
  "_npmUser": {
    "name": "feross",
    "email": "feross@feross.org"
  },
  "_npmVersion": "5.7.1",
  "_phantomChildren": {
    "arr-flatten": "1.1.0",
    "async-each": "1.0.1",
    "expand-range": "1.8.2",
    "filename-regex": "2.0.1",
    "fsevents": "1.1.3",
    "inherits": "2.0.3",
    "is-binary-path": "1.0.1",
    "is-buffer": "1.1.6",
    "is-posix-bracket": "0.1.1",
    "normalize-path": "2.1.1",
    "object.omit": "2.0.1",
    "parse-glob": "3.0.4",
    "path-is-absolute": "1.0.1",
    "preserve": "0.2.0",
    "readdirp": "2.1.0",
    "regex-cache": "0.4.4",
    "repeat-element": "1.1.2"
  },
  "_requested": {
    "raw": "watchify",
    "scope": null,
    "escapedName": "watchify",
    "name": "watchify",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/watchify/-/watchify-3.11.0.tgz",
  "_shasum": "03f1355c643955e7ab8dcbf399f624644221330f",
  "_shrinkwrap": null,
  "_spec": "watchify",
  "_where": "/Users/maybaby/Documents/SPRING_2018_CLASSES/CS_473_FrontEnd/front-end-dev-resources/chattrbox",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bin": {
    "watchify": "bin/cmd.js"
  },
  "bugs": {
    "url": "https://github.com/substack/watchify/issues"
  },
  "dependencies": {
    "anymatch": "^1.3.0",
    "browserify": "^16.1.0",
    "chokidar": "^1.0.0",
    "defined": "^1.0.0",
    "outpipe": "^1.1.0",
    "through2": "^2.0.0",
    "xtend": "^4.0.0"
  },
  "description": "watch mode for browserify builds",
  "devDependencies": {
    "brfs": "^1.0.1",
    "mkdirp": "~0.5.1",
    "split": "^1.0.0",
    "tape": "^4.2.2",
    "uglify-js": "^2.5.0",
    "win-spawn": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-7jWG0c3cKKm2hKScnSAMUEUjRJKXUShwMPk0ASVhICycQhwND3IMAdhJYmc1mxxKzBUJTSF5HZizfrKrS6BzkA==",
    "shasum": "03f1355c643955e7ab8dcbf399f624644221330f",
    "tarball": "https://registry.npmjs.org/watchify/-/watchify-3.11.0.tgz",
    "fileCount": 30,
    "unpackedSize": 51941
  },
  "gitHead": "11989b2e3238f8ef16bbf34a32d4edfaa80ad314",
  "homepage": "https://github.com/substack/watchify",
  "keywords": [
    "browserify",
    "browserify-tool",
    "watch",
    "bundle",
    "build",
    "browser"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ahdinosaur",
      "email": "michael.williams@enspiral.com"
    },
    {
      "name": "anandthakker",
      "email": "vestibule@anandthakker.net"
    },
    {
      "name": "ashaffer88",
      "email": "darawk@gmail.com"
    },
    {
      "name": "balupton",
      "email": "b@lupton.cc"
    },
    {
      "name": "bpostlethwaite",
      "email": "post.ben.here@gmail.com"
    },
    {
      "name": "bret",
      "email": "bcomnes@gmail.com"
    },
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    },
    {
      "name": "dcousens",
      "email": "npm@dcousens.com"
    },
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    },
    {
      "name": "elnounch",
      "email": "contact@elnounch.net"
    },
    {
      "name": "emilbayes",
      "email": "github@tixz.dk"
    },
    {
      "name": "feross",
      "email": "feross@feross.org"
    },
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "fpereira1",
      "email": "pereira.filype@gmail.com"
    },
    {
      "name": "garann",
      "email": "garann@gmail.com"
    },
    {
      "name": "gkatsev",
      "email": "me@gkatsev.com"
    },
    {
      "name": "goto-bus-stop",
      "email": "rene@kooi.me"
    },
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    },
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    },
    {
      "name": "jmm",
      "email": "npm-public@jessemccarthy.net"
    },
    {
      "name": "jprichardson",
      "email": "jprichardson@gmail.com"
    },
    {
      "name": "jryans",
      "email": "jryans@gmail.com"
    },
    {
      "name": "leichtgewicht",
      "email": "martin.heidegger@gmail.com"
    },
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "mattdesl",
      "email": "dave.des@gmail.com"
    },
    {
      "name": "maxogden",
      "email": "max@maxogden.com"
    },
    {
      "name": "mellowmelon",
      "email": "palmermebane@gmail.com"
    },
    {
      "name": "parshap",
      "email": "parshap+npm@gmail.com"
    },
    {
      "name": "pkrumins",
      "email": "peteris.krumins@gmail.com"
    },
    {
      "name": "sethvincent",
      "email": "sethvincent@gmail.com"
    },
    {
      "name": "stevemao",
      "email": "maochenyan@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    },
    {
      "name": "tehshrike",
      "email": "me@JoshDuff.com"
    },
    {
      "name": "terinjokes",
      "email": "terinjokes@gmail.com"
    },
    {
      "name": "thlorenz",
      "email": "thlorenz@gmx.de"
    },
    {
      "name": "ungoldman",
      "email": "ungoldman@gmail.com"
    },
    {
      "name": "yerkopalma",
      "email": "yerko.palma@usach.cl"
    },
    {
      "name": "yoshuawuyts",
      "email": "yoshuawuyts@gmail.com"
    },
    {
      "name": "zertosh",
      "email": "zertosh@gmail.com"
    }
  ],
  "name": "watchify",
  "optionalDependencies": {},
  "readme": "# watchify\n\nwatch mode for [browserify](https://github.com/substack/node-browserify) builds\n\n[![build status](https://secure.travis-ci.org/substack/watchify.svg?branch=master)](http://travis-ci.org/substack/watchify)\n\nUpdate any source file and your browserify bundle will be recompiled on the\nspot.\n\n# example\n\n```\n$ watchify main.js -o static/bundle.js\n```\n\nNow as you update files, `static/bundle.js` will be automatically\nincrementally rebuilt on the fly.\n\nThe `-o` option can be a file or a shell command (not available on Windows)\nthat receives piped input:\n\n``` sh\nwatchify main.js -o 'exorcist static/bundle.js.map > static/bundle.js' -d\n```\n\n``` sh\nwatchify main.js -o 'uglifyjs -cm > static/bundle.min.js'\n```\n\nYou can use `-v` to get more verbose output to show when a file was written and how long the bundling took (in seconds):\n\n```\n$ watchify browser.js -d -o static/bundle.js -v\n610598 bytes written to static/bundle.js (0.23 seconds) at 8:31:25 PM\n610606 bytes written to static/bundle.js (0.10 seconds) at 8:45:59 PM\n610597 bytes written to static/bundle.js (0.14 seconds) at 8:46:02 PM\n610606 bytes written to static/bundle.js (0.08 seconds) at 8:50:13 PM\n610597 bytes written to static/bundle.js (0.08 seconds) at 8:58:16 PM\n610597 bytes written to static/bundle.js (0.19 seconds) at 9:10:45 PM\n```\n\n# usage\n\nUse `watchify` with all the same options as `browserify` except that `-o` (or\n`--outfile`) is mandatory. Additionally, there are also:\n\n```\nStandard Options:\n\n  --outfile=FILE, -o FILE\n\n    This option is required. Write the browserify bundle to this file. If\n    the file contains the operators `|` or `>`, it will be treated as a\n    shell command, and the output will be piped to it.\n\n  --verbose, -v                     [default: false]\n\n    Show when a file was written and how long the bundling took (in\n    seconds).\n\n  --version\n\n    Show the watchify and browserify versions with their module paths.\n```\n\n```\nAdvanced Options:\n\n  --delay                           [default: 100]\n\n    Amount of time in milliseconds to wait before emitting an \"update\"\n    event after a change.\n\n  --ignore-watch=GLOB, --iw GLOB    [default: false]\n\n    Ignore monitoring files for changes that match the pattern. Omitting\n    the pattern will default to \"**/node_modules/**\".\n\n  --poll=INTERVAL                   [default: false]\n\n    Use polling to monitor for changes. Omitting the interval will default\n    to 100ms. This option is useful if you're watching an NFS volume.\n```\n\n# methods\n\n``` js\nvar watchify = require('watchify');\n```\n\n## watchify(b, opts)\n\nwatchify is a browserify [plugin](https://github.com/substack/node-browserify#bpluginplugin-opts), so it can be applied like any other plugin.\nHowever, when creating the browserify instance `b`, **you MUST set the `cache`\nand `packageCache` properties**:\n\n``` js\nvar b = browserify({ cache: {}, packageCache: {} });\nb.plugin(watchify);\n```\n\n```js\nvar b = browserify({\n  cache: {},\n  packageCache: {},\n  plugin: [watchify]\n});\n```\n\n**By default, watchify doesn't display any output, see [events](https://github.com/substack/watchify#events) for more info.**\n\n`b` continues to behave like a browserify instance except that it caches file\ncontents and emits an `'update'` event when a file changes. You should call\n`b.bundle()` after the `'update'` event fires to generate a new bundle.\nCalling `b.bundle()` extra times past the first time will be much faster due\nto caching.\n\n**Important:** Watchify will not emit `'update'` events until you've called\n`b.bundle()` once and completely drained the stream it returns.\n\n```js\nvar fs = require('fs');\nvar browserify = require('browserify');\nvar watchify = require('watchify');\n\nvar b = browserify({\n  entries: ['path/to/entry.js'],\n  cache: {},\n  packageCache: {},\n  plugin: [watchify]\n});\n\nb.on('update', bundle);\nbundle();\n\nfunction bundle() {\n  b.bundle().pipe(fs.createWriteStream('output.js'));\n}\n```\n\n### options\n\nYou can to pass an additional options object as a second parameter of\nwatchify. Its properties are:\n\n`opts.delay` is the amount of time in milliseconds to wait before emitting\nan \"update\" event after a change. Defaults to `100`.\n\n`opts.ignoreWatch` ignores monitoring files for changes. If set to `true`,\nthen `**/node_modules/**` will be ignored. For other possible values see\nChokidar's [documentation](https://github.com/paulmillr/chokidar#path-filtering) on \"ignored\".\n\n`opts.poll` enables polling to monitor for changes. If set to `true`, then\na polling interval of 100ms is used. If set to a number, then that amount of\nmilliseconds will be the polling interval. For more info see Chokidar's\n[documentation](https://github.com/paulmillr/chokidar#performance) on\n\"usePolling\" and \"interval\".\n**This option is useful if you're watching an NFS volume.**\n\n```js\nvar b = browserify({ cache: {}, packageCache: {} });\n// watchify defaults:\nb.plugin(watchify, {\n  delay: 100,\n  ignoreWatch: ['**/node_modules/**'],\n  poll: false\n});\n```\n\n## b.close()\n\nClose all the open watch handles.\n\n# events\n\n## b.on('update', function (ids) {})\n\nWhen the bundle changes, emit the array of bundle `ids` that changed.\n\n## b.on('bytes', function (bytes) {})\n\nWhen a bundle is generated, this event fires with the number of bytes.\n\n## b.on('time', function (time) {})\n\nWhen a bundle is generated, this event fires with the time it took to create the\nbundle in milliseconds.\n\n## b.on('log', function (msg) {})\n\nThis event fires after a bundle was created with messages of the form:\n\n```\nX bytes written (Y seconds)\n```\n\nwith the number of bytes in the bundle X and the time in seconds Y.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\n$ npm install -g watchify\n```\n\nto get the watchify command and:\n\n```\n$ npm install watchify\n```\n\nto get just the library.\n\n# troubleshooting\n\n## rebuilds on OS X never trigger\n\nIt may be related to a bug in `fsevents` (see [#250](https://github.com/substack/watchify/issues/205#issuecomment-98672850)\nand [stackoverflow](http://stackoverflow.com/questions/26708205/webpack-watch-isnt-compiling-changed-files/28610124#28610124)).\nTry the `--poll` flag\nand/or renaming the project's directory - that might help.\n\n# see also\n\n- [budo](https://www.npmjs.com/package/budo) – a simple development server built on watchify\n- [errorify](https://www.npmjs.com/package/errorify) – a plugin to add error handling to watchify development\n- [watchify-request](https://www.npmjs.com/package/watchify-request) – wraps a `watchify` instance to avoid stale bundles in HTTP requests\n- [watchify-middleware](https://www.npmjs.com/package/watchify-middleware) – similar to `watchify-request`, but includes some higher-level features\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/watchify.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "3.11.0"
}
